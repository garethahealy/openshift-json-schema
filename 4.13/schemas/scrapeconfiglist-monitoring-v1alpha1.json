{
  "description": "ScrapeConfigList is a list of ScrapeConfig",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "monitoring.rhobs/v1alpha1"
      ]
    },
    "items": {
      "description": "List of scrapeconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "ScrapeConfig defines a namespaced Prometheus scrape_config to be aggregated across multiple namespaces into the Prometheus configuration.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "monitoring.rhobs/v1alpha1"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "ScrapeConfig"
            ]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selfLink": {
                "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          },
          "spec": {
            "description": "ScrapeConfigSpec is a specification of the desired configuration for a scrape configuration.",
            "type": "object",
            "properties": {
              "authorization": {
                "description": "Authorization header to use on every scrape request.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "credentials": {
                    "description": "Selects a key of a Secret in the namespace that contains the credentials for authentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "Defines the authentication type. The value is case-insensitive. \n \"Basic\" is not a supported value. \n Default: \"Bearer\"",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "basicAuth": {
                "description": "BasicAuth information to use on every scrape request.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "password": {
                    "description": "The secret in the service monitor namespace that contains the password for authentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The secret in the service monitor namespace that contains the username for authentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "consulSDConfigs": {
                "description": "ConsulSDConfigs defines a list of Consul service discovery configurations.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ConsulSDConfig defines a Consul service discovery configuration See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#consul_sd_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "server"
                  ],
                  "properties": {
                    "allow_stale": {
                      "description": "Allow stale Consul results (see https://www.consul.io/api/features/consistency.html). Will reduce load on Consul. If unset, Prometheus uses its default value.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "authorization": {
                      "description": "Authorization header configuration to authenticate against the Consul Server.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "credentials": {
                          "description": "Selects a key of a Secret in the namespace that contains the credentials for authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "Defines the authentication type. The value is case-insensitive. \n \"Basic\" is not a supported value. \n Default: \"Bearer\"",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "basicAuth": {
                      "description": "BasicAuth information to authenticate against the Consul Server. More info: https://prometheus.io/docs/operating/configuration/#endpoints",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "password": {
                          "description": "The secret in the service monitor namespace that contains the password for authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        },
                        "username": {
                          "description": "The secret in the service monitor namespace that contains the username for authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "datacenter": {
                      "description": "Consul Datacenter name, if not provided it will use the local Consul Agent Datacenter.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "enable_http2": {
                      "description": "Whether to enable HTTP2. If unset, Prometheus uses its default value.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "follow_redirects": {
                      "description": "Configure whether HTTP requests follow HTTP 3xx redirects. If unset, Prometheus uses its default value.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "namespace": {
                      "description": "Namespaces are only supported in Consul Enterprise.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "no_proxy": {
                      "description": "Comma-separated string that can contain IPs, CIDR notation, domain names that should be excluded from proxying. IP and domain names can contain port numbers.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "node_meta": {
                      "description": "Node metadata key/value pairs to filter nodes for a given service.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "oauth2": {
                      "description": "Optional OAuth 2.0 configuration.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "clientId",
                        "clientSecret",
                        "tokenUrl"
                      ],
                      "properties": {
                        "clientId": {
                          "description": "The secret or configmap containing the OAuth2 client id",
                          "type": "object",
                          "properties": {
                            "configMap": {
                              "description": "ConfigMap containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secret": {
                              "description": "Secret containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecret": {
                          "description": "The secret containing the OAuth2 client secret",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        },
                        "endpointParams": {
                          "description": "Parameters to append to the token URL",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "scopes": {
                          "description": "OAuth2 scopes used for the token request",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "tokenUrl": {
                          "description": "The URL to fetch the token from",
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "additionalProperties": false
                    },
                    "partition": {
                      "description": "Admin Partitions are only supported in Consul Enterprise.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "proxy_connect_header": {
                      "description": "Specifies headers to send to proxies during CONNECT requests.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "description": "SecretKeySelector selects a key of a Secret.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "proxy_from_environment": {
                      "description": "Use proxy URL indicated by environment variables (HTTP_PROXY, https_proxy, HTTPs_PROXY, https_proxy, and no_proxy) If unset, Prometheus uses its default value.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "proxy_url": {
                      "description": "Optional proxy URL.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "refresh_interval": {
                      "description": "The time after which the provided names are refreshed. On large setup it might be a good idea to increase this value because the catalog will change all the time. If unset, Prometheus uses its default value.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                    },
                    "scheme": {
                      "description": "HTTP Scheme default \"http\"",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "HTTP",
                        "HTTPS"
                      ]
                    },
                    "server": {
                      "description": "A valid string consisting of a hostname or IP followed by an optional port number.",
                      "type": "string",
                      "minLength": 1
                    },
                    "services": {
                      "description": "A list of services for which targets are retrieved. If omitted, all services are scraped.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "tag_separator": {
                      "description": "The string by which Consul tags are joined into the tag label. If unset, Prometheus uses its default value.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "tags": {
                      "description": "An optional list of tags used to filter nodes for a given service. Services must contain all tags in the list.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "tlsConfig": {
                      "description": "TLS Config",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "ca": {
                          "description": "Certificate authority used when verifying server certificates.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMap": {
                              "description": "ConfigMap containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secret": {
                              "description": "Secret containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "cert": {
                          "description": "Client certificate to present when doing client-authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMap": {
                              "description": "ConfigMap containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secret": {
                              "description": "Secret containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "insecureSkipVerify": {
                          "description": "Disable target certificate validation.",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "keySecret": {
                          "description": "Secret containing the client key file for the targets.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        },
                        "serverName": {
                          "description": "Used to verify the hostname for the targets.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "tokenRef": {
                      "description": "Consul ACL TokenRef, if not provided it will use the ACL from the local Consul Agent.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "dnsSDConfigs": {
                "description": "DNSSDConfigs defines a list of DNS service discovery configurations.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "DNSSDConfig allows specifying a set of DNS domain names which are periodically queried to discover a list of targets. The DNS servers to be contacted are read from /etc/resolv.conf. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#dns_sd_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "names"
                  ],
                  "properties": {
                    "names": {
                      "description": "A list of DNS domain names to be queried.",
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "port": {
                      "description": "The port number used if the query type is not SRV Ignored for SRV records",
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "refreshInterval": {
                      "description": "RefreshInterval configures the time after which the provided names are refreshed. If not set, Prometheus uses its default value.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                    },
                    "type": {
                      "description": "The type of DNS query to perform. One of SRV, A, AAAA or MX. If not set, Prometheus uses its default value.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "SRV",
                        "A",
                        "AAAA",
                        "MX"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "ec2SDConfigs": {
                "description": "EC2SDConfigs defines a list of EC2 service discovery configurations.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "EC2SDConfig allow retrieving scrape targets from AWS EC2 instances. The private IP address is used by default, but may be changed to the public IP address with relabeling. The IAM credentials used must have the ec2:DescribeInstances permission to discover scrape targets See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ec2_sd_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "accessKey": {
                      "description": "AccessKey is the AWS API key.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "filters": {
                      "description": "Filters can be used optionally to filter the instance list by other criteria. Available filter criteria can be found here: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html Filter API documentation: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Filter.html",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "EC2Filter is the configuration for filtering EC2 instances.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name",
                          "values"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "port": {
                      "description": "The port to scrape metrics from. If using the public IP address, this must instead be specified in the relabeling rule.",
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "refreshInterval": {
                      "description": "RefreshInterval configures the refresh interval at which Prometheus will re-read the instance list.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                    },
                    "region": {
                      "description": "The AWS region",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "roleARN": {
                      "description": "AWS Role ARN, an alternative to using AWS API keys.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "secretKey": {
                      "description": "SecretKey is the AWS API secret.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "fileSDConfigs": {
                "description": "FileSDConfigs defines a list of file service discovery configurations.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "FileSDConfig defines a Prometheus file service discovery configuration See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#file_sd_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "files"
                  ],
                  "properties": {
                    "files": {
                      "description": "List of files to be used for file discovery. Recommendation: use absolute paths. While relative paths work, the prometheus-operator project makes no guarantees about the working directory where the configuration file is stored. Files must be mounted using Prometheus.ConfigMaps or Prometheus.Secrets.",
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "description": "SDFile represents a file used for service discovery",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^[^*]*(\\*[^/]*)?\\.(json|yml|yaml|JSON|YML|YAML)$"
                      }
                    },
                    "refreshInterval": {
                      "description": "RefreshInterval configures the refresh interval at which Prometheus will reload the content of the files.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "honorLabels": {
                "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "honorTimestamps": {
                "description": "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "httpSDConfigs": {
                "description": "HTTPSDConfigs defines a list of HTTP service discovery configurations.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "HTTPSDConfig defines a prometheus HTTP service discovery configuration See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#http_sd_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "authorization": {
                      "description": "Authorization header configuration to authenticate against the target HTTP endpoint.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "credentials": {
                          "description": "Selects a key of a Secret in the namespace that contains the credentials for authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "Defines the authentication type. The value is case-insensitive. \n \"Basic\" is not a supported value. \n Default: \"Bearer\"",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "basicAuth": {
                      "description": "BasicAuth information to authenticate against the target HTTP endpoint. More info: https://prometheus.io/docs/operating/configuration/#endpoints",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "password": {
                          "description": "The secret in the service monitor namespace that contains the password for authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        },
                        "username": {
                          "description": "The secret in the service monitor namespace that contains the username for authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "refreshInterval": {
                      "description": "RefreshInterval configures the refresh interval at which Prometheus will re-query the endpoint to update the target list.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                    },
                    "tlsConfig": {
                      "description": "TLS configuration applying to the target HTTP endpoint.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "ca": {
                          "description": "Certificate authority used when verifying server certificates.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMap": {
                              "description": "ConfigMap containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secret": {
                              "description": "Secret containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "cert": {
                          "description": "Client certificate to present when doing client-authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMap": {
                              "description": "ConfigMap containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secret": {
                              "description": "Secret containing data to use for the targets.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "insecureSkipVerify": {
                          "description": "Disable target certificate validation.",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "keySecret": {
                          "description": "Secret containing the client key file for the targets.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        },
                        "serverName": {
                          "description": "Used to verify the hostname for the targets.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "url": {
                      "description": "URL from which the targets are fetched.",
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^http(s)?://.+$"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "keepDroppedTargets": {
                "description": "Per-scrape limit on the number of targets dropped by relabeling that will be kept in memory. 0 means no limit. \n It requires Prometheus >= v2.47.0.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "kubernetesSDConfigs": {
                "description": "KubernetesSDConfigs defines a list of Kubernetes service discovery configurations.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "KubernetesSDConfig allows retrieving scrape targets from Kubernetes' REST API. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "role"
                  ],
                  "properties": {
                    "role": {
                      "description": "Role of the Kubernetes entities that should be discovered.",
                      "type": "string",
                      "enum": [
                        "Node",
                        "node"
                      ]
                    },
                    "selectors": {
                      "description": "Selector to select objects.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "K8SSelectorConfig is Kubernetes Selector Config",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "field": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "label": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "role": {
                            "description": "K8SRole is role of the service in Kubernetes. Currently the only supported role is \"Node\".",
                            "type": "string",
                            "enum": [
                              "Node",
                              "node"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "role"
                      ],
                      "x-kubernetes-list-type": "map"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "labelLimit": {
                "description": "Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "labelNameLengthLimit": {
                "description": "Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "labelValueLengthLimit": {
                "description": "Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "metricRelabelings": {
                "description": "MetricRelabelConfigs to apply to samples before ingestion.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. \n More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "action": {
                      "description": "Action to perform based on the regex matching. \n `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0. \n Default: \"Replace\"",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "replace",
                        "Replace",
                        "keep",
                        "Keep",
                        "drop",
                        "Drop",
                        "hashmod",
                        "HashMod",
                        "labelmap",
                        "LabelMap",
                        "labeldrop",
                        "LabelDrop",
                        "labelkeep",
                        "LabelKeep",
                        "lowercase",
                        "Lowercase",
                        "uppercase",
                        "Uppercase",
                        "keepequal",
                        "KeepEqual",
                        "dropequal",
                        "DropEqual"
                      ]
                    },
                    "modulus": {
                      "description": "Modulus to take of the hash of the source label values. \n Only applicable when the action is `HashMod`.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "regex": {
                      "description": "Regular expression against which the extracted value is matched.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "replacement": {
                      "description": "Replacement value against which a Replace action is performed if the regular expression matches. \n Regex capture groups are available.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "separator": {
                      "description": "Separator is the string between concatenated SourceLabels.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sourceLabels": {
                      "description": "The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                      }
                    },
                    "targetLabel": {
                      "description": "Label to which the resulting string is written in a replacement. \n It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. \n Regex capture groups are available.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "metricsPath": {
                "description": "MetricsPath HTTP path to scrape for metrics. If empty, Prometheus uses the default value (e.g. /metrics).",
                "type": [
                  "string",
                  "null"
                ]
              },
              "params": {
                "description": "Optional HTTP URL parameters",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "relabelings": {
                "description": "RelabelConfigs defines how to rewrite the target's labels before scraping. Prometheus Operator automatically adds relabelings for a few standard Kubernetes fields. The original scrape job's name is available via the `__tmp_prometheus_job_name` label. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. \n More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "action": {
                      "description": "Action to perform based on the regex matching. \n `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0. \n Default: \"Replace\"",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "replace",
                        "Replace",
                        "keep",
                        "Keep",
                        "drop",
                        "Drop",
                        "hashmod",
                        "HashMod",
                        "labelmap",
                        "LabelMap",
                        "labeldrop",
                        "LabelDrop",
                        "labelkeep",
                        "LabelKeep",
                        "lowercase",
                        "Lowercase",
                        "uppercase",
                        "Uppercase",
                        "keepequal",
                        "KeepEqual",
                        "dropequal",
                        "DropEqual"
                      ]
                    },
                    "modulus": {
                      "description": "Modulus to take of the hash of the source label values. \n Only applicable when the action is `HashMod`.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "regex": {
                      "description": "Regular expression against which the extracted value is matched.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "replacement": {
                      "description": "Replacement value against which a Replace action is performed if the regular expression matches. \n Regex capture groups are available.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "separator": {
                      "description": "Separator is the string between concatenated SourceLabels.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sourceLabels": {
                      "description": "The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                      }
                    },
                    "targetLabel": {
                      "description": "Label to which the resulting string is written in a replacement. \n It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. \n Regex capture groups are available.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "sampleLimit": {
                "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "scheme": {
                "description": "Configures the protocol scheme used for requests. If empty, Prometheus uses HTTP by default.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "HTTP",
                  "HTTPS"
                ]
              },
              "scrapeInterval": {
                "description": "ScrapeInterval is the interval between consecutive scrapes.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
              },
              "scrapeTimeout": {
                "description": "ScrapeTimeout is the number of seconds to wait until a scrape request times out.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
              },
              "staticConfigs": {
                "description": "StaticConfigs defines a list of static targets with a common label set.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "StaticConfig defines a Prometheus static configuration. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "labels": {
                      "description": "Labels assigned to all metrics scraped from the targets.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "targets": {
                      "description": "List of targets for this static configuration.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "Target represents a target for Prometheus to scrape",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "targetLimit": {
                "description": "TargetLimit defines a limit on the number of scraped targets that will be accepted.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "tlsConfig": {
                "description": "TLS configuration to use on every scrape request",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "ca": {
                    "description": "Certificate authority used when verifying server certificates.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "cert": {
                    "description": "Client certificate to present when doing client-authentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "insecureSkipVerify": {
                    "description": "Disable target certificate validation.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "keySecret": {
                    "description": "Secret containing the client key file for the targets.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "serverName": {
                    "description": "Used to verify the hostname for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "monitoring.rhobs",
            "kind": "ScrapeConfig",
            "version": "v1alpha1"
          }
        ],
        "additionalProperties": false
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ScrapeConfigList"
      ]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": [
            "string",
            "null"
          ]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "monitoring.rhobs",
      "kind": "ScrapeConfigList",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}